name: test, build and coverage

on:
  pull_request:

jobs:

  test:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.0'
          cache: true

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/537156000473/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'github-identity-pool@devops-339608.iam.gserviceaccount.com'

      - uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: 'ffc-platform-development'

      - uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: "shake" # Don't need this, but it's mandatory that its set so...

      - name: Setup github for go private
        run: git config --global url.https://${{ secrets.SERVICE_HASTINGS_PAT }}@github.com/.insteadOf https://github.com/

      - name: Install additional dependencies
        run: make test-dependencies
        
      - name: Run tests
        run: make test
        timeout-minutes: 20

      - name: Quality check - Test Coverage
        env: 
          MIN_THRESHOLD: 70
        run: |
          echo "Minimum threshold: $MIN_THRESHOLD %"
          totalCoverage=`go tool cover -func=./dist/profile.cov | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          if (( $(echo "$totalCoverage $MIN_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "$totalCoverage is above minimum threshold"
            echo "OK"
          else
            echo "Test Coverage of $totalCoverage is below threshold of $MIN_THRESHOLD."
            echo "Failed"
            exit 1
          fi


  build:
    env:
      SERVICE_NAME: template-service

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: GitHub slug
        id: slug
        uses: gacts/github-slug@v1.2.2

      - name: Get head short sha
        id: short_sha
        run: echo "short_sha=$(echo "${{ github.event.pull_request.head.sha }}" | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Setup github for go private
        run: git config --global url.https://${{ secrets.SERVICE_HASTINGS_PAT }}@github.com/.insteadOf https://github.com/

      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v1
        with:
          file: ./build/Dockerfile
          driver: docker

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/537156000473/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'github-identity-pool@devops-339608.iam.gserviceaccount.com' 

      - uses: 'docker/login-action@v1'
        with:
          registry: 'europe-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - uses: docker/build-push-action@v2
        with:
          version: v0.7.0
          context: .
          file: ./build/Dockerfile
          tags: europe-docker.pkg.dev/devops-339608/services/${{ github.event.repository.name }}:${{ steps.slug.outputs.branch-name-slug }}-${{ steps.short_sha.outputs.short_sha }}
          push: true
